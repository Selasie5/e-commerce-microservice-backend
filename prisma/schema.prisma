// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}


model User{
  id Int @id @default(autoincrement())
  email String @unique
  password String
  firstName String
  lastName String
  role Role @default(USER)
  orders Order[]
  reviews Review[]
  notifications Notification[]
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

enum Role{
  ADMIN
  USER
}

model Product {
  id Int     @id @default(autoincrement())
  name String
  description String
  price Float
  stockQuantity Int
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  reviews Review[]
  orders OrderItem[]
}

model Order{
  id Int @id @default(autoincrement())
  userId Int
  user User @relation(fields:[userId], references:[id])
  status OrderStatus
  orderItems OrderItem[]
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  }

  enum OrderStatus{
    PENDING
    COMPLETED
    CANCELLED
  }

  model OrderItem{
    id Int @id @default(autoincrement())
    orderId Int
    productId Int
    quantity Int
    product Product @relation(fields:[productId], references:[id])
    order Order @relation(fields:[orderId], references:[id])
    createdAt DateTime @default(now())
  }

  model Review{
    id Int @id @default(autoincrement())
    userId Int
    productId Int
    rating Int
    comment String?
    user User @relation(fields:[userId], references:[id])
    product Product @relation(fields:[productId], references:[id])
    createdAt DateTime @default(now())
  }

  model Analytics{
    id Int @id @default(autoincrement())
    pageName String
    views Int @default(0)
    sales Int @default(0)
    createdAt DateTime @default(now())
    updatedAt DateTime @updatedAt
  }

  model Notification{
    id Int @id @default(autoincrement())
    userId Int 
    message String
    read Boolean @default(false)
    user User @relation(fields:[userId], references:[id])
    createdAt DateTime @default(now())
    updatedAt DateTime @updatedAt
  }